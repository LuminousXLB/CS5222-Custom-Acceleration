
****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /data/Xilinx/Vitis_HLS/2020.2/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/data/Xilinx/Vitis_HLS/2020.2/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'ubuntu' on host 'pc17' (Linux_x86_64 version 5.4.0-104-generic) on Fri Mar 18 15:21:07 +08 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.4 LTS
INFO: [HLS 200-10] In directory '/home/ubuntu/cs5222/workspace/zynq/hls/mmult_custom'
Sourcing Tcl script 'hls.tcl'
INFO: [HLS 200-1510] Running: open_project accel 
INFO: [HLS 200-10] Opening project '/home/ubuntu/cs5222/workspace/zynq/hls/mmult_custom/accel'.
INFO: [HLS 200-1510] Running: set_top mmult_hw 
INFO: [HLS 200-1510] Running: add_files ./mmult_custom.cpp 
INFO: [HLS 200-10] Adding design file './mmult_custom.cpp' to the project
INFO: [HLS 200-1510] Running: add_files -tb ./mmult_test.cpp 
INFO: [HLS 200-10] Adding test bench file './mmult_test.cpp' to the project
INFO: [HLS 200-1510] Running: open_solution solution0 -flow_target vivado 
INFO: [HLS 200-10] Opening solution '/home/ubuntu/cs5222/workspace/zynq/hls/mmult_custom/accel/solution0'.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-1505.html
INFO: [HLS 200-1510] Running: set_part xc7z020clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_clock_uncertainty 12.5% 
INFO: [HLS 200-1510] Running: csim_design -clean 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
   Compiling ../../../../mmult_test.cpp in debug mode
   Compiling ../../../../mmult_custom.cpp in debug mode
   Generating csim.exe
DEBUGGING AXI4 STREAMING DATA TYPES!
Matrices identical ... Test successful!
The maximum depth reached by any of the 2 hls::stream() instances in the design is 131235
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 13.91 seconds. CPU system time: 0.7 seconds. Elapsed time: 13.05 seconds; current allocated memory: 70.663 MB.
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Cannot find source file ./mmult_fixed.cpp; skipping it.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 70.926 MB.
INFO: [HLS 200-10] Analyzing design file './mmult_custom.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 4.05 seconds. CPU system time: 0.38 seconds. Elapsed time: 4.44 seconds; current allocated memory: 72.589 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:283:50)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:286:25)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:67)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:36)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:39)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:23)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:304:51)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:307:26)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:68)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:37)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:40)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:24)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:111:28)
INFO: [HLS 214-131] Inlining function 'push_stream(axi_T const&, bool)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:111:34)
INFO: [HLS 214-131] Inlining function 'pop_stream(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:75:32)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:74:27)
INFO: [HLS 214-131] Inlining function 'pop_stream(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:55:28)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:54:23)
INFO: [HLS 214-131] Inlining function 'pop_stream(hls::axis<ap_uint<128>, 4ul, 5ul, 5ul> const&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<128>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:40:24)
WARNING: [HLS 214-167] The program may have out of bound array access (./mmult_custom.cpp:43:31)
WARNING: [HLS 214-167] The program may have out of bound array access (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_int_base.h:534:91)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.45 seconds. CPU system time: 0.32 seconds. Elapsed time: 4.8 seconds; current allocated memory: 75.447 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 75.448 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.09 seconds; current allocated memory: 84.674 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.15 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.17 seconds; current allocated memory: 96.289 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOAD_OFFSET' in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOAD_WEIGHT' (./mmult_custom.cpp:50) in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOAD_INPUT' (./mmult_custom.cpp:70) in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'L2' (./mmult_custom.cpp:88) in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'STORE_OUTPUT' (./mmult_custom.cpp:104) in function 'mmult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_42_1' (./mmult_custom.cpp:42) in function 'mmult_hw' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_2' in function 'mmult_hw' completely with a factor of 16.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_57_3' (./mmult_custom.cpp:57) in function 'mmult_hw' completely with a factor of 16.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_72_4' in function 'mmult_hw' completely with a factor of 16.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_77_5' (./mmult_custom.cpp:77) in function 'mmult_hw' completely with a factor of 16.
INFO: [HLS 200-489] Unrolling loop 'L3' (./mmult_custom.cpp:91) in function 'mmult_hw' completely with a factor of 256.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_106_6' (./mmult_custom.cpp:107) in function 'mmult_hw' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_108_7' (./mmult_custom.cpp:108) in function 'mmult_hw' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'packet' automatically.
INFO: [XFORM 203-102] Partitioning array 'v.assign' automatically.
INFO: [XFORM 203-101] Partitioning array 'weight_buf.V' (./mmult_custom.cpp:26) in dimension 2 with a block factor 32.
INFO: [XFORM 203-101] Partitioning array 'in_buf.V' (./mmult_custom.cpp:27) in dimension 2 with a block factor 32.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.0' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.1' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.2' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.3' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.4' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.5' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.6' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.7' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.8' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.9' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.10' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.11' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.12' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.13' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.14' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.15' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.16' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.17' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.18' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.19' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.20' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.21' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.22' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.23' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.24' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.25' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.26' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.27' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.28' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.29' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.30' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight_buf.V.31' (./mmult_custom.cpp:26) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.0' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.1' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.2' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.3' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.4' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.5' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.6' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.7' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.8' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.9' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.10' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.11' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.12' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.13' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.14' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.15' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.16' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.17' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.18' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.19' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.20' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.21' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.22' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.23' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.24' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.25' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.26' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.27' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.28' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.29' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.30' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'in_buf.V.31' (./mmult_custom.cpp:27) in dimension 2 automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'mmult_hw' (./mmult_custom.cpp:25:38)...256 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 5.34 seconds. CPU system time: 0.06 seconds. Elapsed time: 5.4 seconds; current allocated memory: 143.567 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'L1' (./mmult_custom.cpp:85:18) in function 'mmult_hw'.
WARNING: [HLS 200-960] Cannot flatten loop 'LT' (./mmult_custom.cpp:65:14) in function 'mmult_hw' more than one sub loop.
Resolution: For help on HLS 200-960 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-960.html
INFO: [HLS 200-472] Inferring partial write operation for 'offset_buf.V' (./mmult_custom.cpp:43:31)
INFO: [HLS 200-472] Inferring partial write operation for 'weight_buf.V[0][0]' (./mmult_custom.cpp:58:38)
INFO: [HLS 200-472] Inferring partial write operation for 'in_buf.V[0][0]' (./mmult_custom.cpp:78:38)
INFO: [HLS 200-472] Inferring partial write operation for 'out_buf.V' (./mmult_custom.cpp:97:31)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 10.01 seconds. CPU system time: 0.02 seconds. Elapsed time: 10.03 seconds; current allocated memory: 174.524 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mmult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mmult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln1345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'out_buf_V'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'LOAD_OFFSET'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('offset_buf_V_addr_2_write_ln43', ./mmult_custom.cpp:43) of variable 'tmp' on array 'offset_buf.V', ./mmult_custom.cpp:25 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'offset_buf_V'.
Resolution: For help on HLS 200-885 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-885.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 3, loop 'LOAD_OFFSET'
INFO: [SCHED 204-61] Pipelining loop 'LOAD_WEIGHT'.
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_WEIGHT'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_WEIGHT'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_WEIGHT'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_WEIGHT'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_WEIGHT'): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_WEIGHT'): Unable to enforce a carried dependence constraint (II = 15, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16, loop 'LOAD_WEIGHT'
INFO: [SCHED 204-61] Pipelining loop 'LOAD_INPUT'.
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_INPUT'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_INPUT'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_INPUT'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_INPUT'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_INPUT'): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_INPUT'): Unable to enforce a carried dependence constraint (II = 15, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16, loop 'LOAD_INPUT'
INFO: [SCHED 204-61] Pipelining loop 'L1_L2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 9, loop 'L1_L2'
INFO: [SCHED 204-61] Pipelining loop 'STORE_OUTPUT'.
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'STORE_OUTPUT'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis write on port 'out_stream_V_data_V' and axis write on port 'out_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'STORE_OUTPUT'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis write on port 'out_stream_V_data_V' and axis write on port 'out_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 3, Depth = 5, loop 'STORE_OUTPUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 6.68 seconds. CPU system time: 0.14 seconds. Elapsed time: 6.81 seconds; current allocated memory: 193.094 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4.53 seconds. CPU system time: 0.2 seconds. Elapsed time: 4.75 seconds; current allocated memory: 212.033 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mmult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'mmult_hw' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port CONTROL_BUS.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8s_8ns_16s_17_4_1': 127 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8s_8ns_17s_18_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8s_8ns_32ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8s_8ns_16_1_1': 127 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mmult_hw'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4.87 seconds. CPU system time: 0.24 seconds. Elapsed time: 5.14 seconds; current allocated memory: 246.322 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'mmult_hw_mul_8s_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_offset_buf_V_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_weight_buf_V_0_0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_in_buf_V_0_0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_out_buf_V_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 10.91 seconds. CPU system time: 0.46 seconds. Elapsed time: 11.44 seconds; current allocated memory: 334.411 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mmult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mmult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 114.39 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 51.21 seconds. CPU system time: 1.86 seconds. Elapsed time: 53.2 seconds; current allocated memory: 334.734 MB.
INFO: [HLS 200-112] Total CPU user time: 66.49 seconds. Total CPU system time: 3.03 seconds. Total elapsed time: 67.67 seconds; peak allocated memory: 334.411 MB.
INFO: [Common 17-206] Exiting vitis_hls at Fri Mar 18 15:22:15 2022...

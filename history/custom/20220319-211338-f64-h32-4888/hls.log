
****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /data/Xilinx/Vitis_HLS/2020.2/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/data/Xilinx/Vitis_HLS/2020.2/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'ubuntu' on host 'pc17' (Linux_x86_64 version 5.4.0-104-generic) on Sat Mar 19 21:13:39 +08 2022
INFO: [HLS 200-10] On os Ubuntu 20.04.4 LTS
INFO: [HLS 200-10] In directory '/home/ubuntu/cs5222/workspace/zynq/hls/mmult_custom'
Sourcing Tcl script 'hls.tcl'
INFO: [HLS 200-1510] Running: open_project accel 
INFO: [HLS 200-10] Opening project '/home/ubuntu/cs5222/workspace/zynq/hls/mmult_custom/accel'.
INFO: [HLS 200-1510] Running: set_top mmult_hw 
INFO: [HLS 200-1510] Running: add_files ./mmult_custom.cpp 
INFO: [HLS 200-10] Adding design file './mmult_custom.cpp' to the project
INFO: [HLS 200-1510] Running: add_files -tb ./mmult_test.cpp 
INFO: [HLS 200-10] Adding test bench file './mmult_test.cpp' to the project
INFO: [HLS 200-1510] Running: open_solution solution0 -flow_target vivado 
INFO: [HLS 200-10] Opening solution '/home/ubuntu/cs5222/workspace/zynq/hls/mmult_custom/accel/solution0'.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-1505.html
INFO: [HLS 200-1510] Running: set_part xc7z020clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_clock_uncertainty 12.5% 
INFO: [HLS 200-1510] Running: csim_design -clean 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
   Compiling ../../../../mmult_test.cpp in debug mode
   Compiling ../../../../mmult_custom.cpp in debug mode
   Generating csim.exe
DEBUGGING AXI4 STREAMING DATA TYPES!
Matrices identical ... Test successful!
The maximum depth reached by any of the 2 hls::stream() instances in the design is 0
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 12.18 seconds. CPU system time: 0.66 seconds. Elapsed time: 11.34 seconds; current allocated memory: 69.968 MB.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 70.105 MB.
INFO: [HLS 200-10] Analyzing design file './mmult_custom.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.89 seconds. CPU system time: 0.34 seconds. Elapsed time: 4.23 seconds; current allocated memory: 71.578 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:283:50)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:286:25)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:67)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:36)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:39)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:23)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::read(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>&)' into 'pop_stream(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:144:8)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:304:51)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:307:26)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:68)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:37)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:40)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul> const&)' (/data/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:24)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>::write(hls::axis<ap_uint<512>, 4ul, 5ul, 5ul> const&)' into 'push_stream(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&, axi_T const&, bool)' (./mmult_custom.cpp:170:8)
INFO: [HLS 214-131] Inlining function 'pop_stream(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:41:20)
INFO: [HLS 214-131] Inlining function 'push_stream(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&, axi_T const&, bool)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:131:13)
INFO: [HLS 214-131] Inlining function 'pop_stream(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:87:32)
INFO: [HLS 214-131] Inlining function 'pop_stream(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:70:28)
INFO: [HLS 214-131] Inlining function 'pop_stream(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' into 'mmult_hw(hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&, hls::stream<hls::axis<ap_uint<512>, 4ul, 5ul, 5ul>, 0>&)' (./mmult_custom.cpp:52:28)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.07 seconds. CPU system time: 0.38 seconds. Elapsed time: 8.48 seconds; current allocated memory: 76.845 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 76.846 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.38 seconds. CPU system time: 0 seconds. Elapsed time: 0.38 seconds; current allocated memory: 87.903 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.7 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.71 seconds; current allocated memory: 98.806 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOAD_WEIGHT1' (./mmult_custom.cpp:146) in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOAD_WEIGHT2' (./mmult_custom.cpp:146) in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOAD_INPUT' (./mmult_custom.cpp:146) in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'COMPUTE_HIDDEN' in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'COMPUTE_OUTPUT' (./mmult_custom.cpp:112) in function 'mmult_hw' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'STORE_OUTPUT' (./mmult_custom.cpp:161) in function 'mmult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_51_2' (./mmult_custom.cpp:146) in function 'mmult_hw' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_59_3' (./mmult_custom.cpp:59) in function 'mmult_hw' completely with a factor of 32.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_71_5' (./mmult_custom.cpp:71) in function 'mmult_hw' completely with a factor of 32.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_88_6' (./mmult_custom.cpp:88) in function 'mmult_hw' completely with a factor of 32.
INFO: [HLS 200-489] Unrolling loop 'H_INNER' (./mmult_custom.cpp:103) in function 'mmult_hw' completely with a factor of 64.
INFO: [HLS 200-489] Unrolling loop 'O_INNER' (./mmult_custom.cpp:117) in function 'mmult_hw' completely with a factor of 32.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_128_7' (./mmult_custom.cpp:128) in function 'mmult_hw' completely with a factor of 10.
INFO: [XFORM 203-102] Partitioning array 'input.V' (./mmult_custom.cpp:23) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight1.V' (./mmult_custom.cpp:24) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'weight2.V' (./mmult_custom.cpp:25) in dimension 2 automatically.
INFO: [XFORM 203-102] Partitioning array 'v.assign' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'mmult_hw' (./mmult_custom.cpp:23:38)...218 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.21 seconds. CPU system time: 0.05 seconds. Elapsed time: 2.26 seconds; current allocated memory: 137.636 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'FORWARD_COMPUTE' (./mmult_custom.cpp:97:18) in function 'mmult_hw' more than one sub loop.
Resolution: For help on HLS 200-960 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-960.html
WARNING: [HLS 200-960] Cannot flatten loop 'LT' (./mmult_custom.cpp:161:10) in function 'mmult_hw' more than one sub loop.
Resolution: For help on HLS 200-960 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-960.html
INFO: [HLS 200-472] Inferring partial write operation for 'packet' (./mmult_custom.cpp:146:17)
INFO: [HLS 200-472] Inferring partial write operation for 'offset.V' (./mmult_custom.cpp:44:12)
INFO: [HLS 200-472] Inferring partial write operation for 'weight1.V[0]' (./mmult_custom.cpp:60:35)
INFO: [HLS 200-472] Inferring partial write operation for 'weight2.V[0]' (./mmult_custom.cpp:72:35)
INFO: [HLS 200-472] Inferring partial write operation for 'input.V[0]' (./mmult_custom.cpp:89:41)
INFO: [HLS 200-472] Inferring partial write operation for 'input.V[1]' (./mmult_custom.cpp:90:45)
INFO: [HLS 200-472] Inferring partial write operation for 'hidden.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'hidden.V' (./mmult_custom.cpp:108:27)
INFO: [HLS 200-472] Inferring partial write operation for 'out_buf.V' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2.07 seconds. CPU system time: 0.02 seconds. Elapsed time: 2.09 seconds; current allocated memory: 147.603 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mmult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mmult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln691_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'out_buf_V'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_42_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_42_1'
INFO: [SCHED 204-61] Pipelining loop 'LOAD_WEIGHT1'.
WARNING: [HLS 200-880] The II Violation in module 'mmult_hw' (loop 'LOAD_WEIGHT1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read on port 'in_stream_V_data_V' and axis read on port 'in_stream_V_data_V'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2020.2;t=hls+guidance;d=200-880.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 2, loop 'LOAD_WEIGHT1'
INFO: [SCHED 204-61] Pipelining loop 'LOAD_WEIGHT2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOAD_WEIGHT2'
INFO: [SCHED 204-61] Pipelining loop 'LOAD_INPUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOAD_INPUT'
INFO: [SCHED 204-61] Pipelining loop 'COMPUTE_HIDDEN'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, loop 'COMPUTE_HIDDEN'
INFO: [SCHED 204-61] Pipelining loop 'COMPUTE_OUTPUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 8, loop 'COMPUTE_OUTPUT'
INFO: [SCHED 204-61] Pipelining loop 'STORE_OUTPUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'STORE_OUTPUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.58 seconds. CPU system time: 0.07 seconds. Elapsed time: 1.64 seconds; current allocated memory: 154.421 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.42 seconds. CPU system time: 0.08 seconds. Elapsed time: 1.5 seconds; current allocated memory: 162.110 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mmult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/in_stream_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_data_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_keep_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_strb_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_user_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_last_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_id_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'mmult_hw/out_stream_V_dest_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'mmult_hw' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port CONTROL_BUS.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8s_4ns_8ns_8_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8s_8s_8ns_8_4_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8s_8s_8s_8_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8s_4ns_8_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8s_8s_8_1_1': 15 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mmult_hw'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2.07 seconds. CPU system time: 0.1 seconds. Elapsed time: 2.18 seconds; current allocated memory: 175.522 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'mmult_hw_mul_8s_4ns_8_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'mmult_hw_mul_8s_8s_8_1_1_Multiplier_1'
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_input_V_0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_weight1_V_0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_weight2_V_0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_out_buf_V_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_packet_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mmult_hw_hidden_V_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 5.83 seconds. CPU system time: 0.25 seconds. Elapsed time: 6.11 seconds; current allocated memory: 210.515 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mmult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mmult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 116.39 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 28.33 seconds. CPU system time: 1.32 seconds. Elapsed time: 29.71 seconds; current allocated memory: 211.119 MB.
INFO: [HLS 200-112] Total CPU user time: 41.83 seconds. Total CPU system time: 2.53 seconds. Total elapsed time: 42.38 seconds; peak allocated memory: 210.515 MB.
INFO: [Common 17-206] Exiting vitis_hls at Sat Mar 19 21:14:22 2022...
